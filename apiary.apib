FORMAT: 1A
HOST: https://www.ascribe.io/***REMOVED***/api

# Stilnest API

API endpoint for adding and searching 3D designs.

## Designs Collection [/designs]

### Add a new design to your corpus [POST]

Upload a new design.  Encrypt and store the STL file on Ascribe while simultaneously making the design available for simliarity searching and rendering.

+ Request (application/json)

    + Attributes
        + design_id (string, required) - An identifier for the design. Must be unique.
        + design_url (string, required) - The PUBLIC URL pointing to the STL file.

    + Header
        
            Authorization: <your_api_token>
    
    + Body
        
            {
                "design_id": "abc-123-xyz",
                "design_url": "https://www.mydomain.com/3dmodel.stl"
            }


+ Response 201 (application/json)

    If the design was successfully added.

    + Attributes
        + design_id (string) - The supplied identifier of the design.
        + ascribe_id (number) - The generated Ascribe ID number of the design.
        
    + Body
        
            {
                "design_id": "abc-123-xyz",
                "ascribe_id": 12345
            }

+ Response 409 (application/json)

    If a design with the same design_id already exists.
    
    + Attributes
        + ascribe_id (number) - The Ascribe ID of the conflicting design
        
    + Body
        
            {
                "conflicting_ascribe_id": 12345
            }

### List designs in your corpus [GET/designs]

Retrieve a list of all your designs.

+ Response 200 (application/json)
    
    + Body
        
            {
                "designs": [
                    {"design_id": "abc-123-xyz", "ascribe_id": 13424},
                    {"design_id": "def-123-xyz", "ascribe_id": 2344},
                    {"design_id": "ghi-123-xyz", "ascribe_id": 9803},
                    ...
                ]
            }
    
### Search for similar designs in your corpus[GET /designs/search]

After adding a design, you can search your own corpus for similar designs.

+ Request (application/json)

    + Attributes
        + design_id (string, required) - an identifier for the STL file. must be unique.

    + Header
        
            Authorization: <your_api_token>
    
    + Body
        
            {
                "design_id": "abc-123-xyz",
            }

+ Response 200 (application/json)

    Get identifiers for matching designs. Matches may be an empty list. Lower scores indicate closer matches.
    + Body
        
            {
                "design_id": "abc-123-xyz",
                "ascribe_id": 12345
                "matches": [
                    {
                        "ascribe_id": 34820
                        "design_id": "def-456-abc", 
                        "score": 0.057934
                    },
                    {
                        "ascribe_id": 12382
                        "design_id": "ghi-789-def", 
                        "score": 0.103425
                    },
                    {
                        "ascribe_id": 9402
                        "design_id": "jkl-012-ghi", 
                        "score": 0.220945
                    }
                ]
            }
    
### Retrieve a design [GET /designs/{stl_id}]

Not yet implemented

+ Response 200 (application/json)


### Render a design [GET /designs/{stl_id}/render]

Make a representative render of the design.

+ Request (application/json)

    + Attributes
        + design_id (string, required) - an identifier for the STL file. must be unique.

    + Header
        
            Authorization: <your_api_token>
    
    + Body
        
            {
                "design_id": "abc-123-xyz",
            }
            

+ Response 200 (application/content)
    

